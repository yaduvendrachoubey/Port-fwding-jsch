package com.test.port_forwarding;
import java.io.InputStream;

import com.jcraft.jsch.Channel;
import com.jcraft.jsch.ChannelExec;
import com.jcraft.jsch.JSch;
import com.jcraft.jsch.Session;


/**
 * Hello world!
 *
 */
public class App 
{
	public static void main( String[] args )
	{
		String host="localhost";
		String user="xyzcv";
		String password="xyz";
		
		StringBuilder outputBuffer = new StringBuilder();
		try{

			java.util.Properties config = new java.util.Properties(); 
			config.put("StrictHostKeyChecking", "no");
			JSch jsch = new JSch();
			Session session=jsch.getSession(user, host, 22);
			session.setPassword(password);
			session.setConfig(config);
			session.connect();
			System.out.println("Connected");
			//session.disconnect();

			session.setPortForwardingL(9878,"localhost",22);
			//FAILS HERE!!
			JSch jsch1 = new JSch();
			Session secondSession=jsch.getSession(user, host, 9878);
			secondSession.setPassword(password);
			secondSession.setConfig(config);
			secondSession.connect();
			System.out.println("Connected");
			// secondSession.connect(); // now we're connected to the secondary system
			Channel channel=secondSession.openChannel("exec");
			((ChannelExec)channel).setCommand("hostname");

			channel.setInputStream(null);

			InputStream stdout=channel.getInputStream();

			channel.connect();

			while (true) {
				byte[] tmpArray=new byte[1024];
				while(stdout.available() > 0){
					int i=stdout.read(tmpArray, 0, 1024);
					if(i<0)break;
					outputBuffer.append(new String(tmpArray, 0, i));
				}
				if(channel.isClosed()){
					System.out.println("exit-status: "+channel.getExitStatus());
					break;
				}
			}
			stdout.close();

			channel.disconnect();

			secondSession.disconnect();
			session.disconnect();

			System.out.print(outputBuffer.toString());


		}catch(Exception e){
			e.printStackTrace();
		}

	}

}

